type: entities
entities:
  - type: custom:hui-element
    card_type: vertical-stack
    cards:
      - type: grid
        columns: 2
        square: false
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                name: Porta Ingresso
                entity: binary_sensor.sensore_porta_package
                show_icon: false
                show_state: true
                styles:
                  state:
                    - font-size: 10px
                  card:
                    - width: 135px
                tap_action:
                  action: none
              - type: custom:button-card
                name: |
                  [[[
                    var date = new Date(states['input_datetime.last_door_open'].state);
                    return "Ultima apertura oggi: " + date.toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'});
                  ]]]
                entity: input_datetime.last_door_open
                show_icon: false
                show_state: false
                tap_action:
                  action: none
                styles:
                  card:
                    - width: 170px
                    - background: none
                    - font-size: 12px
          - type: custom:paper-buttons-row
            styles:
              justify-content: flex-end
            buttons:
              - icon: mdi:image
                position: right
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Ultimo Snapshot
                      style: >
                        --popup-min-width: 300px;

                        --popup-max-width: 600px;

                        --popup-border-radius: 10px;

                        --popup-background-color:
                        var(--secondary-background-color);

                        --dialog-backdrop-filter: blur(2em) brightness(0.75);
                      content:
                        type: custom:config-template-card
                        entities:
                          - input_text.snapshot_path_frontend
                        variables:
                          snapshot: states['input_text.snapshot_path_frontend'].state
                        card:
                          type: picture
                          image: ${snapshot}
              - icon: hass:cog-outline
                tap_action:
                  action: fire-dom-event
                  browser_mod:
                    service: browser_mod.popup
                    data:
                      title: Impostazioni
                      style: >-
                        --popup-min-width: 400px; --popup-max-width: auto;
                        --popup-border-radius: 10px; --popup-background-color:
                        var(--secondary-background-color);
                        --dialog-backdrop-filter: blur(2em) brightness(0.75);
                      content:
                        type: entities
                        entities:
                          - style:
                              background: "#62717b"
                              height: 1px
                              margin-left: auto
                              margin-right: auto
                            type: divider
                          - entity: sensor.time
                            name: Orologio
                          - type: divider
                          - entity: sensor.date
                            name: Data
                          - type: divider
                          - type: custom:multiple-entity-row
                            entity: input_boolean.notify_push_porta
                            icon: mdi:message
                            name: Notifiche
                            toggle: true
                            state_header: HA
                            entities:
                              - entity: input_boolean.notify_telegram_porta
                                name: TELEGRAM
                                toggle: true
                          - type: section
                            label: Orario Notifiche
                          - entity: input_datetime.orario_inizio_notifiche_porta
                            name: Dalle
                            icon: mdi:timer-outline
                          - entity: input_datetime.orario_fine_notifiche_porta
                            name: Alle
                            icon: mdi:timer-outline
      - type: horizontal-stack
        cards:
          - type: vertical-stack
            cards:
              - type: picture-entity
                entity: binary_sensor.sensore_porta_package
                show_name: false
                show_state: false
                image: /local/foto-pkg/porta-chiusa.png
                state_image:
                  "on": /local/foto-pkg/porta-aperta.png
                  "off": /local/foto-pkg/porta-chiusa.png
                tap_action:
                  action: none
                card_mod:
                  style: |
                    ha-card {
                      left: 25%;
          - type: vertical-stack
            cards:
              - type: custom:hui-element
                card_type: vertical-stack
                cards:
                  - type: button
                    layout: icon_name
                    name: 🔐 Serratura
                    entity: binary_sensor.porta_stato_blocco
                    show_icon: false
                    show_name: true
                    show_state: true
                    card_mod:
                      style: |
                        ha-card {
                          width: 120px;
                          left: 40%;
                          --ha-card-background: none;
                          --ha-card-box-shadow": none;
                        }
                        span {
                          font-size: 12px !important;
                        }
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: " "
                          style: >
                            --popup-min-width: 400px; --popup-border-radius:
                            12px; --popup-background-color:
                            var(--card-background-color);
                            --dialog-backdrop-filter: blur(2em)
                            brightness(0.75);
                          content:
                            type: custom:mod-card
                            card_mod:
                              style: |
                                :host {
                                  display: flex;
                                  justify-content: center;
                                  align-items: center;
                                }
                            card:
                              type: vertical-stack
                              cards:
                                - type: custom:button-card
                                  entity: input_text.pin_digitale
                                  name: 🔢 Pin Richiesto 🔢
                                  show_icon: false
                                  show_state: false
                                  show_label: false
                                  tap_action: none
                                  styles:
                                    label:
                                      - background-color: white
                                      - color: black
                                      - text-align: center
                                    card:
                                      - text-align: center
                                      - border: none
                                      - box-shadow: none
                                      - margin-left: 20%
                                      - width: 180px
                                      - height: 40px
                                    name:
                                      - font-weight: bold
                                      - text-align: center
                                - type: custom:button-card
                                  entity: input_text.pin_feedback
                                  name: null
                                  tap_action: none
                                  show_icon: false
                                  show_state: false
                                  show_name: false
                                  show_label: true
                                  label: |
                                    [[[
                                      const pin = states['input_text.pin_digitale'].state;
                                      const feedback = entity.state;
                                      if (feedback && feedback !== "") {
                                        return feedback;
                                      }
                                      return '*'.repeat(pin.length || 0);
                                    ]]]
                                  styles:
                                    card:
                                      - margin-left: 35%
                                      - background-color: black
                                      - border-radius: 12px
                                      - height: 40px
                                      - width: 150px
                                    label:
                                      - font-size: >
                                          [[[ return entity.state !== '' ? '18px'
                                          : '25px' ]]]
                                      - font-family: Fantasy
                                      - text-align: center
                                      - letter-spacing: 2px
                                      - color: |
                                          [[[
                                            if (entity.state === 'APERTO') return 'green';
                                            if (entity.state === 'BLOCCATO') return 'rgb(255,170,40)';
                                            if (entity.state === 'ERRATO') return 'rgb(255,60,60)';
                                            return 'rgb(255,170,40)';
                                          ]]]
                                      - animation: |
                                          [[[
                                            if (entity.state === 'ERRATO' || entity.state === 'BLOCCATO')
                                              return 'flash 0.7s ease-in-out 3';
                                            else (entity.state === 'APERTA');
                                            return 'none';
                                          ]]]
                                  extra_styles: |
                                    @keyframes flash {
                                      0% { opacity: 1; }
                                      25% { opacity: 0; }
                                      50% { opacity: 1; }
                                      75% { opacity: 0; }
                                      100% { opacity: 1; }
                                    }
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      name: "1"
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '1').slice(-4); ]]]
                                    - type: custom:button-card
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      name: "2"
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '2').slice(-4); ]]]
                                    - type: custom:button-card
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      name: "3"
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '3').slice(-4); ]]]
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      name: "4"
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '4').slice(-4); ]]]
                                    - type: custom:button-card
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      name: "5"
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '5').slice(-4); ]]]
                                    - type: custom:button-card
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      name: "6"
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '6').slice(-4); ]]]
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      name: "7"
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '7').slice(-4); ]]]
                                    - type: custom:button-card
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      name: "8"
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '8').slice(-4); ]]]
                                    - type: custom:button-card
                                      name: "9"
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '9').slice(-4); ]]]
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      name: C
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: ""
                                    - type: custom:button-card
                                      name: "0"
                                      styles:
                                        card:
                                          - height: 50px
                                          - width: 80px
                                      tap_action:
                                        action: call-service
                                        service: input_text.set_value
                                        data:
                                          entity_id: input_text.pin_digitale
                                          value: >
                                            [[[ return
                                            (states['input_text.pin_digitale'].state.replace(/\D/g,
                                            '') + '0').slice(-4); ]]]
                                    - type: custom:button-card
                                      name: OK
                                      tap_action:
                                        action: call-service
                                        service: script.package_porta_pin
                                        data:
                                          browser_id:
                                            - this
                                      styles:
                                        name:
                                          - font-weight: bold
                                          - color: green
                                        card:
                                          - height: 50px
                                          - width: 80px
                                - type: custom:button-card
                                  name: |
                                    🔒 Premi per bloccare 🔒
                                  entity: input_boolean.package_porta_switch
                                  show_state: false
                                  show_icon: false
                                  tap_action:
                                    action: call-service
                                    service: script.blocca_porta_feedback
                                  styles:
                                    name:
                                      - font-size: 15px
                                      - font-weight: bold
                                      - color: red
                                    card:
                                      - height: 50px
                                      - width: 260px
              - type: button
                layout: icon_name
                name: 🚪Portone
                entity: lock.portone
                show_icon: false
                show_state: true
                card_mod:
                  style: |
                    ha-card {
                      width: 120px;
                      left: 40%;
                      --ha-card-background: none;
                      --ha-card-box-shadow": none;
                    }
                    span {
                      font-size: 12px !important;
                    }
                tap_action:
                  action: call-service
                  service: switch.toggle
                  target:
                    entity_id: switch.apri_portone
                  confirmation:
                    text: 🔐 Vuoi aprire il portone? 🔐
                styles:
                  grid:
                    - grid-template-columns: 50px auto
                  icon:
                    - padding: 0px 0px
                    - height: 30px
                    - width: 30px
                  card:
                    - "--ha-card-background": none
                  state:
                    - padding: 0px 10px
                    - justify-self: start
                    - font-family: Roboto, sans-serif
                    - font-size: 15px
                  name:
                    - padding: 0px 10px
                    - justify-self: start
                    - color: var(--primary-text-color)
              - type: button
                layout: icon_name
                name: 🚪Cancello
                entity: lock.portone
                show_icon: false
                show_state: true
                card_mod:
                  style: |
                    ha-card {
                      width: 120px;
                      left: 40%;
                      --ha-card-background: none;
                      --ha-card-box-shadow": none;
                    }
                    span {
                      font-size: 12px !important;
                    }
                tap_action:
                  action: call-service
                  service: switch.toggle
                  target:
                    entity_id: switch.apri_cancello
                  confirmation:
                    text: 🔐 Vuoi aprire il cancello? 🔐
                styles:
                  grid:
                    - grid-template-columns: 50px auto
                  icon:
                    - padding: 0px 0px
                    - height: 30px
                    - width: 30px
                  card:
                    - "--ha-card-background": none
                  state:
                    - padding: 0px 10px
                    - justify-self: start
                    - font-family: Roboto, sans-serif
                    - font-size: 15px
                  name:
                    - padding: 0px 10px
                    - justify-self: start
                    - color: var(--primary-text-color)
show_header_toggle: false
