homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'OneState Packages - Front Door'
        author: 'OneState'
      setting:
######################################################################
#                                                                    #
#                        PACKAGE SETTINGS                            #
#                                                                    #
######################################################################
#
# IF YOU WANT THE PRO VERSION WITH KEYPAD, SNAPSHOTS AND MORE
# YOU CAN SHOP ON â†’ https://stateforge.gumroad.com/l/PackagePortaIngresso
#
################### SENSOR CONFIGURATION ############################


        # SMART LOCK
        Smart Lock: &lock lock.door

        # DOOR SENSORS
        Door Sensor: &door "{{ states('binary_sensor.door')}}"
        Door Sensor Entity: &door2 binary_sensor.door


        # NOTIFICATION SERVICES
        Push Notification Service: &push notify.mobile_app_roberto
        Telegram Notification Service: &telegram notify.telegram_lorenzo


input_datetime:
  last_door_open:
    name: "Last Door Opening"
    has_date: true
    has_time: true
  snapshot_time:
    name: "Snapshot Time"
    has_date: true
    has_time: true
  notification_start_time:
    name: "Notification Start Time"
    has_date: false
    has_time: true
  notification_end_time:
    name: "Notification End Time"
    has_date: false
    has_time: true

input_boolean:
  notify_push_door:
    name: "Push Notification"
  notify_telegram_door:
    name: "Telegram Notification"
  package_door_switch:
    name: "Door Package Switch"

template:
  - binary_sensor:
      - name: "Door Lock State"
        state: "{{ is_state('input_boolean.package_door_switch', 'off') }}"
        device_class: lock
  - binary_sensor:
      - name: "Door Package Sensor"
        unique_id: door_package_sensor
        state: *door
        device_class: door

automation:
  - alias: Door Package - Sync Door State at Startup
    description: "Sync input_boolean with real lock state at boot"
    trigger:
      - platform: homeassistant
        event: start
    condition: []
    action:
      - delay: "00:00:30"
      - choose:
          - conditions:
              - condition: state
                entity_id: *lock
                state: "locked"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.package_door_switch
          - conditions:
              - condition: state
                entity_id: *lock
                state: "unlocked"
            sequence:
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.package_door_switch
    mode: single

  - alias: Door Package - Switch
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.package_door_switch
        to: "on"
        id: door_on
      - platform: state
        entity_id: input_boolean.package_door_switch
        to: "off"
        id: door_off
      - platform: state
        entity_id: *lock
        to: "locked"
        id: locked
      - platform: state
        entity_id: *lock
        to: "unlocked"
        id: unlocked
    condition: []
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: door_off
              - condition: state
                entity_id: *lock
                state: "locked"
            sequence:
              - service: lock.unlock
                target:
                  entity_id: *lock
          - conditions:
              - condition: trigger
                id: door_on
              - condition: state
                entity_id: *lock
                state: "unlocked"
            sequence:
              - service: lock.lock
                target:
                  entity_id: *lock
          - conditions:
              - condition: trigger
                id: locked
              - condition: state
                entity_id: input_boolean.package_door_switch
                state: "off"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.package_door_switch
          - conditions:
              - condition: trigger
                id: unlocked
              - condition: state
                entity_id: input_boolean.package_door_switch
                state: "on"
            sequence:
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.package_door_switch

  - alias: Door Package - Send message
    id: door_message
    trigger:
      - platform: state
        entity_id: *door2
        to: "on"
        id: door_open
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: door_open
              - condition: state
                entity_id: input_boolean.notify_push_door
                state: "on"
              - condition: time
                after: input_datetime.notification_start_time
                before: input_datetime.notification_end_time
            sequence:
              - service: *push
                data:
                  message: "ðŸšª Door Opened ðŸšª"
      - choose:
          - conditions:
              - condition: trigger
                id: door_open
              - condition: state
                entity_id: input_boolean.notify_telegram_door
                state: "on"
              - condition: time
                after: input_datetime.notification_start_time
                before: input_datetime.notification_end_time
            sequence:
              - service: *telegram
                data:
                  message: "ðŸšª Door Opened ðŸšª"

  - alias: Door Package - Register last door open
    id: record_last_door_open
    description: "Updates date and time of last door opening"
    trigger:
      - platform: state
        entity_id: *door2
        to: "on"
    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.last_door_open
        data:
          datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
    mode: single
